//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Happy Emoji.json
//       
//       Input file:
//           Happy Emoji.json (21375 bytes created 21:24+08:00 Aug 19 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    86 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    10 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     1 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     6 |
// | CompositionSpriteShapes  |    10 |
// |--------------------------+-------|
// | Brushes                  |     3 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Happy
    // Frame rate:  25 fps
    // Frame count: 110
    // Duration:    4400.0 mS
    public partial class HappyEmoji
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 4.400 seconds.
        internal const long c_durationTicks = 44000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Happy_Emoji_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 110d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 25d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(44000000);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 110d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        public partial class Happy_Emoji_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 44000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostDarkSlateGray_FF333333;
            CompositionColorBrush _colorBrush_White;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionContainerShape _containerShape_5;
            CompositionEllipseGeometry _ellipse_24p164;
            CompositionEllipseGeometry _ellipse_58p497;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            CompositionSpriteShape _spriteShape_4;
            CompositionSpriteShape _spriteShape_8;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-105.234001F, -137.528F));
                    builder.AddCubicBezier(new Vector2(-105.234001F, -137.528F), new Vector2(-121.936996F, -90.7570038F), new Vector2(-155.345001F, -82.961998F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-101.892998F, 110.802002F));
                    builder.AddCubicBezier(new Vector2(-101.892998F, 110.802002F), new Vector2(-59.3100014F, 65.6539993F), new Vector2(-1.30700004F, 67.2919998F));
                    builder.AddCubicBezier(new Vector2(26.1450005F, 68.0670013F), new Vector2(57.0499992F, 79.3219986F), new Vector2(88.5299988F, 110.802002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-73.4029999F, 110.802002F));
                    builder.AddCubicBezier(new Vector2(-66.6809998F, 89.4449997F), new Vector2(-29.3759995F, 67.2919998F), new Vector2(-1.30700004F, 67.2919998F));
                    builder.AddCubicBezier(new Vector2(24.9379997F, 67.2919998F), new Vector2(57.2080002F, 92.2220001F), new Vector2(64.314003F, 110.802002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostDarkSlateGray_FF333333()
            {
                return (_colorBrush_AlmostDarkSlateGray_FF333333 == null)
                    ? _colorBrush_AlmostDarkSlateGray_FF333333 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x33, 0x33, 0x33))
                    : _colorBrush_AlmostDarkSlateGray_FF333333;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<-1.079, -2.193>
            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFFFAF30()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xAF, 0x30));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return (_colorBrush_White == null)
                    ? _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF))
                    : _colorBrush_White;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-1.079F, 221.115005F);
                result.Offset = new Vector2(250F, 249.999985F);
                // ShapeGroup: Ellipse 1 Offset:<-1.079, -2.193>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(50F, 50F);
                var shapes = result.Shapes;
                // Transforms: Shape Layer 2
                shapes.Add(ContainerShape_2());
                // Transforms: Shape Layer 12
                shapes.Add(SpriteShape_4());
                // Transforms: Shape Layer 13
                shapes.Add(ContainerShape_4());
                // Transforms: Shape Layer 17
                shapes.Add(SpriteShape_8());
                return result;
            }

            // - Layer aggregator
            // Transforms for Shape Layer 2
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-87.9400024F, -45.6240005F);
                result.Offset = new Vector2(57.9400024F, 96.6240005F);
                var shapes = result.Shapes;
                // ShapeGroup: Ellipse 1 Offset:<-87.94, -45.624>
                shapes.Add(SpriteShape_1());
                // Transforms: Shape Layer 3
                shapes.Add(ContainerShape_3());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 2
            // Transforms for Shape Layer 3
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-87.9400024F, -45.6240005F);
                result.Scale = new Vector2(0.75F, 0.75F);
                var shapes = result.Shapes;
                // ShapeGroup: Ellipse 1 Offset:<-87.94, -45.624>
                shapes.Add(SpriteShape_2());
                // Transforms: Shape Layer 4 Scale:0.94253,0.94253,
                // RotationDegrees:-13.927000045776367, Offset:<41.327003, -7.5670013>
                shapes.Add(SpriteShape_3());
                return result;
            }

            // - Layer aggregator
            // Transforms for Shape Layer 13
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-87.9400024F, -45.6240005F);
                result.Offset = new Vector2(217.940002F, 95.6240005F);
                var shapes = result.Shapes;
                // ShapeGroup: Ellipse 1 Offset:<-87.94, -45.624>
                shapes.Add(SpriteShape_5());
                // Transforms: Shape Layer 14
                shapes.Add(ContainerShape_5());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 13
            // Transforms for Shape Layer 14
            CompositionContainerShape ContainerShape_5()
            {
                if (_containerShape_5 != null) { return _containerShape_5; }
                var result = _containerShape_5 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-87.9400024F, -45.6240005F);
                result.Scale = new Vector2(0.75F, 0.75F);
                var shapes = result.Shapes;
                // ShapeGroup: Ellipse 1 Offset:<-87.94, -45.624>
                shapes.Add(SpriteShape_6());
                // Transforms: Shape Layer 15 Scale:0.94253,0.94253,
                // RotationDegrees:-13.927000045776367, Offset:<-7.3399963, -7.5670013>
                shapes.Add(SpriteShape_7());
                return result;
            }

            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_24p164()
            {
                if (_ellipse_24p164 != null) { return _ellipse_24p164; }
                var result = _ellipse_24p164 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(24.1639996F, 24.1639996F);
                return result;
            }

            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_58p497()
            {
                if (_ellipse_58p497 != null) { return _ellipse_58p497; }
                var result = _ellipse_58p497 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(58.4964981F, 58.4964981F);
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<-1.079, -2.193>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_223p309()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(223.308502F, 223.308502F);
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_1());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_2());
                return result;
            }

            CompositionPathGeometry PathGeometry_0()
            {
                return (_pathGeometry_0 == null)
                    ? _pathGeometry_0 = _c.CreatePathGeometry(new CompositionPath(Geometry_0()))
                    : _pathGeometry_0;
            }

            // - Layer aggregator
            // Scale:0.9,0.9, RotationDegrees:180, Offset:<256.681, 270.85202>
            CompositionPathGeometry PathGeometry_1()
            {
                if (_pathGeometry_1 != null) { return _pathGeometry_1; }
                var result = _pathGeometry_1 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<-1.079, -2.193>
                var geometry = Ellipse_223p309();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -1.079F, -2.19300008F), ColorBrush_AlmostGoldenrod_FFFFAF30());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 2
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<-87.94, -45.624>
                var geometry = Ellipse_58p497();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -87.9400024F, -45.6240005F), ColorBrush_White());;
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 2
            // Transforms: Shape Layer 3
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<-87.94, -45.624>
                var geometry = Ellipse_58p497();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -87.9400024F, -45.6240005F), ColorBrush_AlmostDarkSlateGray_FF333333());;
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 2
            // Transforms: Shape Layer 3
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<-62.486004, -74.205>, Rotation:-30.444001051368225 degrees,
                // Scale:<0.80184793, 0.8191434>, Skew:<-4.6351744E-08, 0>
                var geometry = Ellipse_24p164();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.691293001F, -0.406293124F, 0.415056676F, 0.706203878F, -62.4860039F, -74.2050018F), ColorBrush_White());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                if (_spriteShape_4 != null) { return _spriteShape_4; }
                var result = _spriteShape_4 = _c.CreateSpriteShape(PathGeometry_0());
                result.CenterPoint = new Vector2(-130.289993F, -110.245003F);
                result.RotationAngleInDegrees = -133F;
                result.Scale = new Vector2(0.800000012F, 0.800000012F);
                result.StrokeBrush = ColorBrush_AlmostDarkSlateGray_FF333333();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 19F;
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 13
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                // Offset:<-87.94, -45.624>
                var geometry = Ellipse_58p497();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -87.9400024F, -45.6240005F), ColorBrush_White());;
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 13
            // Transforms: Shape Layer 14
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                // Offset:<-87.94, -45.624>
                var geometry = Ellipse_58p497();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -87.9400024F, -45.6240005F), ColorBrush_AlmostDarkSlateGray_FF333333());;
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 13
            // Transforms: Shape Layer 14
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_7()
            {
                // Offset:<-111.15301, -74.205>, Rotation:-30.444001051368225 degrees,
                // Scale:<0.80184793, 0.8191434>, Skew:<-4.6351744E-08, 0>
                var geometry = Ellipse_24p164();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.691293001F, -0.406293124F, 0.415056676F, 0.706203878F, -111.153008F, -74.2050018F), ColorBrush_White());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_8()
            {
                if (_spriteShape_8 != null) { return _spriteShape_8; }
                var result = _spriteShape_8 = _c.CreateSpriteShape(PathGeometry_0());
                result.CenterPoint = new Vector2(-130.289993F, -110.245003F);
                result.RotationAngleInDegrees = 133F;
                result.Scale = new Vector2(-0.800000012F, 0.800000012F);
                result.StrokeBrush = ColorBrush_AlmostDarkSlateGray_FF333333();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 19F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_9()
            {
                // Offset:<243.9871, 439.9995>, Scale:<0.9, 0.9>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(-0.899999976F, 0F, -0F, -0.899999976F, 243.987106F, 439.999512F));;
                result.StrokeBrush = ColorBrush_AlmostDarkSlateGray_FF333333();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 19F;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 0.666999996F))
                    : _cubicBezierEasingFunction_2;
            }

            // - - Layer aggregator
            // -  Scale:0.9,0.9, RotationDegrees:180, Offset:<256.681, 270.85202>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, Path_0(), HoldThenStepEasingFunction());
                // Frame 34.
                result.InsertKeyFrame(0.309090912F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 44.
                result.InsertKeyFrame(0.400000006F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 55.
                result.InsertKeyFrame(0.5F, Path_0(), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.699999988F, Path_0(), CubicBezierEasingFunction_0());
                // Frame 88.
                result.InsertKeyFrame(0.800000012F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 98.
                result.InsertKeyFrame(0.890909076F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 109.
                result.InsertKeyFrame(0.9909091F, Path_0(), CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_1());
                // Scale:0.9,0.9, RotationDegrees:180, Offset:<256.681, 270.85202>
                shapes.Add(SpriteShape_9());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 2
            // Transforms: Shape Layer 3
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-1.14999998F, 0.769999981F), StepThenHoldEasingFunction());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, new Vector2(-1.14999998F, 0.769999981F), HoldThenStepEasingFunction());
                // Frame 27.
                result.InsertKeyFrame(0.24545455F, new Vector2(7.8499999F, -11.2299995F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.354545444F, new Vector2(7.8499999F, -11.2299995F), CubicBezierEasingFunction_1());
                // Frame 52.
                result.InsertKeyFrame(0.472727269F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.699999988F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_1());
                // Frame 81.
                result.InsertKeyFrame(0.736363649F, new Vector2(-11.1499996F, -9.22999954F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.845454574F, new Vector2(7.8499999F, -11.2299995F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.963636339F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 12
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(100F, 78.6240005F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(100F, 138.623993F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(100F, 138.623993F), CubicBezierEasingFunction_1());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.24545455F, new Vector2(106F, 66.6240005F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.354545444F, new Vector2(106F, 66.6240005F), CubicBezierEasingFunction_1());
                // Frame 52.
                result.InsertKeyFrame(0.472727269F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_1());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(100F, 138.623993F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(100F, 138.623993F), CubicBezierEasingFunction_1());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.699999988F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_2());
                // Frame 81.
                result.InsertKeyFrame(0.736363649F, new Vector2(87F, 68.6240005F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.845454574F, new Vector2(106F, 66.6240005F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.963636339F, new Vector2(100F, 78.6240005F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: Shape Layer 13
            // Transforms: Shape Layer 14
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-1.14999998F, 0.769999981F), StepThenHoldEasingFunction());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, new Vector2(-1.14999998F, 0.769999981F), HoldThenStepEasingFunction());
                // Frame 27.
                result.InsertKeyFrame(0.24545455F, new Vector2(-9.14999962F, -11.2299995F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.354545444F, new Vector2(-9.14999962F, -11.2299995F), CubicBezierEasingFunction_1());
                // Frame 52.
                result.InsertKeyFrame(0.472727269F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.699999988F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_1());
                // Frame 81.
                result.InsertKeyFrame(0.736363649F, new Vector2(8.85000038F, -11.2299995F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.845454574F, new Vector2(-9.14999962F, -11.2299995F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.963636339F, new Vector2(-1.14999998F, 0.769999981F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 17
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(260.579987F, 78.6240005F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(260.579987F, 138.623993F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(260.579987F, 138.623993F), CubicBezierEasingFunction_1());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.209090903F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.24545455F, new Vector2(268.579987F, 66.6240005F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.354545444F, new Vector2(268.579987F, 66.6240005F), CubicBezierEasingFunction_1());
                // Frame 52.
                result.InsertKeyFrame(0.472727269F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_1());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(260.579987F, 138.623993F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(260.579987F, 138.623993F), CubicBezierEasingFunction_1());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.699999988F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_2());
                // Frame 81.
                result.InsertKeyFrame(0.736363649F, new Vector2(250.580002F, 66.6240005F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.845454574F, new Vector2(268.579987F, 66.6240005F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.963636339F, new Vector2(260.579987F, 78.6240005F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_4()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(200F, 174.376007F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(200F, 144.376007F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(200F, 144.376007F), CubicBezierEasingFunction_1());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(200F, 174.376007F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(200F, 174.376007F), CubicBezierEasingFunction_1());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(200F, 144.376007F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(200F, 144.376007F), CubicBezierEasingFunction_1());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(200F, 174.376007F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(0.970000029F, 1.02999997F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(0.970000029F, 1.02999997F), CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(0.970000029F, 1.02999997F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(0.970000029F, 1.02999997F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 2
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(1F, 0F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(1F, 0F), CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(1F, 0F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(1F, 0F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Shape Layer 13
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-1F, 1F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0272727273F, new Vector2(-1F, 0F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0363636352F, new Vector2(-1F, 0F), CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(-1F, 1F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(-1F, 1F), CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.627272725F, new Vector2(-1F, 0F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.636363626F, new Vector2(-1F, 0F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(-1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.0636363626F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.600000024F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.663636386F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Happy_Emoji_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(500F, 500F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerShape_1.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
                _containerShape_1.StartAnimation("Offset", OffsetVector2Animation_4(), AnimationController_0());
                _containerShape_2.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _containerShape_3.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_4.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
                _containerShape_5.StartAnimation("Offset", OffsetVector2Animation_2(), AnimationController_0());
                _pathGeometry_1.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _spriteShape_4.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _spriteShape_8.StartAnimation("Offset", OffsetVector2Animation_3(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("Scale");
                _containerShape_1.StopAnimation("Scale");
                _containerShape_1.StopAnimation("Offset");
                _containerShape_2.StopAnimation("Scale");
                _containerShape_3.StopAnimation("Offset");
                _containerShape_4.StopAnimation("Scale");
                _containerShape_5.StopAnimation("Offset");
                _pathGeometry_1.StopAnimation("Path");
                _spriteShape_4.StopAnimation("Offset");
                _spriteShape_8.StopAnimation("Offset");
            }

        }
    }
}
