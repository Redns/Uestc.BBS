//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Crying emoji.json
//       
//       Input file:
//           Crying emoji.json (29352 bytes created 20:42+08:00 Aug 19 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   306 |
// |--------------------------+-------|
// | Expression animators     |    13 |
// | KeyFrame animators       |    45 |
// | Reference parameters     |    13 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |    13 |
// | PathKeyFrameAnimations   |     6 |
// |--------------------------+-------|
// | ContainerVisuals         |    15 |
// | ShapeVisuals             |     7 |
// |--------------------------+-------|
// | ContainerShapes          |    11 |
// | CompositionSpriteShapes  |    20 |
// |--------------------------+-------|
// | Brushes                  |    13 |
// | Gradient stops           |     5 |
// | CompositionVisualSurface |     4 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        crying emoji
    // Frame rate:  25 fps
    // Frame count: 126
    // Duration:    5040.0 mS
    public partial class CryingEmoji
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 5.040 seconds.
        internal const long c_durationTicks = 50400000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Crying_emoji_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 126d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 25d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(50400000);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 126d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        public partial class Crying_emoji_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 50400000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostBlack_FF141414;
            CompositionColorBrush _colorBrush_AlmostDodgerBlue_FF269EFF;
            CompositionColorBrush _colorBrush_Black;
            CompositionColorGradientStop _gradientStop_0_White;
            CompositionColorGradientStop _gradientStop_0p899_AlmostLightGray_FFD0D0D0;
            CompositionColorGradientStop _gradientStop_1_AlmostDarkGray_FFA2A2A2;
            CompositionContainerShape _containerShape_00;
            CompositionContainerShape _containerShape_01;
            CompositionContainerShape _containerShape_02;
            CompositionContainerShape _containerShape_03;
            CompositionContainerShape _containerShape_04;
            CompositionContainerShape _containerShape_05;
            CompositionContainerShape _containerShape_06;
            CompositionContainerShape _containerShape_07;
            CompositionContainerShape _containerShape_08;
            CompositionContainerShape _containerShape_09;
            CompositionContainerShape _containerShape_10;
            CompositionEffectFactory _effectFactory;
            CompositionPath _path_00;
            CompositionPath _path_01;
            CompositionPath _path_02;
            CompositionPath _path_03;
            CompositionPath _path_04;
            CompositionPath _path_05;
            CompositionPath _path_06;
            CompositionPath _path_07;
            CompositionPath _path_08;
            CompositionPath _path_09;
            CompositionPath _path_10;
            CompositionPathGeometry _pathGeometry_00;
            CompositionPathGeometry _pathGeometry_01;
            CompositionPathGeometry _pathGeometry_02;
            CompositionPathGeometry _pathGeometry_03;
            CompositionPathGeometry _pathGeometry_04;
            CompositionPathGeometry _pathGeometry_05;
            CompositionPathGeometry _pathGeometry_06;
            CompositionPathGeometry _pathGeometry_07;
            CompositionPathGeometry _pathGeometry_08;
            CompositionPathGeometry _pathGeometry_09;
            CompositionPathGeometry _pathGeometry_10;
            CompositionPathGeometry _pathGeometry_11;
            CompositionPathGeometry _pathGeometry_12;
            CompositionSpriteShape _spriteShape_02;
            CompositionSpriteShape _spriteShape_04;
            CompositionSpriteShape _spriteShape_05;
            CompositionSpriteShape _spriteShape_06;
            CompositionSpriteShape _spriteShape_07;
            CompositionSpriteShape _spriteShape_08;
            CompositionSpriteShape _spriteShape_09;
            CompositionSpriteShape _spriteShape_10;
            CompositionSpriteShape _spriteShape_11;
            ContainerVisual _containerVisual_00;
            ContainerVisual _containerVisual_01;
            ContainerVisual _containerVisual_03;
            ContainerVisual _containerVisual_05;
            ContainerVisual _containerVisual_06;
            ContainerVisual _containerVisual_10;
            ContainerVisual _containerVisual_11;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            InsetClip _insetClip_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;
            Vector2KeyFrameAnimation _offsetVector2Animation_4;
            Vector2KeyFrameAnimation _offsetVector2Animation_5;
            Vector2KeyFrameAnimation _offsetVector2Animation_6;
            Vector3KeyFrameAnimation _offsetVector3Animation_0;
            Vector3KeyFrameAnimation _offsetVector3Animation_1;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // PreComp layer: tears
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 5.
                result.InsertKeyFrame(0.039682541F, true);
                // Frame 110.
                result.InsertKeyFrame(0.873015881F, false);
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -65.5F));
                    builder.AddCubicBezier(new Vector2(36.1749992F, -65.5F), new Vector2(65.5F, -36.1749992F), new Vector2(65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(65.5F, 36.1749992F), new Vector2(36.1749992F, 55.5F), new Vector2(0F, 55.5F));
                    builder.AddCubicBezier(new Vector2(-36.1749992F, 55.5F), new Vector2(-65.5F, 36.1749992F), new Vector2(-65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-65.5F, -36.1749992F), new Vector2(-36.1749992F, -65.5F), new Vector2(0F, -65.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -65.5F));
                    builder.AddCubicBezier(new Vector2(36.1749992F, -65.5F), new Vector2(65.5F, -36.1749992F), new Vector2(65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(65.5F, 36.1749992F), new Vector2(36.1749992F, 9.5F), new Vector2(0F, 9.5F));
                    builder.AddCubicBezier(new Vector2(-36.1749992F, 9.5F), new Vector2(-65.5F, 36.1749992F), new Vector2(-65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-65.5F, -36.1749992F), new Vector2(-36.1749992F, -65.5F), new Vector2(0F, -65.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -35F));
                    builder.AddCubicBezier(new Vector2(19.3299999F, -35F), new Vector2(35F, -19.3299999F), new Vector2(35F, 0F));
                    builder.AddCubicBezier(new Vector2(35F, 19.3299999F), new Vector2(19.3299999F, 35F), new Vector2(0F, 35F));
                    builder.AddCubicBezier(new Vector2(-19.3299999F, 35F), new Vector2(-35F, 19.3299999F), new Vector2(-35F, 0F));
                    builder.AddCubicBezier(new Vector2(-35F, -19.3299999F), new Vector2(-19.3299999F, -35F), new Vector2(0F, -35F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -35F));
                    builder.AddCubicBezier(new Vector2(19.3299999F, -35F), new Vector2(35F, -19.3299999F), new Vector2(35F, 0F));
                    builder.AddCubicBezier(new Vector2(35F, 19.3299999F), new Vector2(19.3299999F, 12.5F), new Vector2(0F, 12.5F));
                    builder.AddCubicBezier(new Vector2(-19.3299999F, 12.5F), new Vector2(-35F, 19.3299999F), new Vector2(-35F, 0F));
                    builder.AddCubicBezier(new Vector2(-35F, -19.3299999F), new Vector2(-19.3299999F, -35F), new Vector2(0F, -35F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -65.5F));
                    builder.AddCubicBezier(new Vector2(36.1749992F, -65.5F), new Vector2(65.5F, -36.1749992F), new Vector2(65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(65.5F, 36.1749992F), new Vector2(36.1749992F, 12F), new Vector2(0F, 12F));
                    builder.AddCubicBezier(new Vector2(-36.1749992F, 12F), new Vector2(-65.5F, 36.1749992F), new Vector2(-65.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-65.5F, -36.1749992F), new Vector2(-36.1749992F, -65.5F), new Vector2(0F, -65.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -35F));
                    builder.AddCubicBezier(new Vector2(19.3299999F, -35F), new Vector2(35F, -19.3299999F), new Vector2(35F, 0F));
                    builder.AddCubicBezier(new Vector2(35F, 19.3299999F), new Vector2(19.3299999F, 13.5F), new Vector2(0F, 13.5F));
                    builder.AddCubicBezier(new Vector2(-19.3299999F, 13.5F), new Vector2(-35F, 19.3299999F), new Vector2(-35F, 0F));
                    builder.AddCubicBezier(new Vector2(-35F, -19.3299999F), new Vector2(-19.3299999F, -35F), new Vector2(0F, -35F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-88F, 127F));
                    builder.AddCubicBezier(new Vector2(-88F, 127F), new Vector2(-39F, 92F), new Vector2(4.5F, 127F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-56.875F, 114.125F));
                    builder.AddCubicBezier(new Vector2(-56.875F, 114.125F), new Vector2(-37.5F, 89.5F), new Vector2(-13.25F, 122F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(105F, 43F));
                    builder.AddLine(new Vector2(105F, 263F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-187.5F, 24.5F));
                    builder.AddCubicBezier(new Vector2(-180.75F, 24.5F), new Vector2(-171.25F, 16.375F), new Vector2(-163F, 16.375F));
                    builder.AddCubicBezier(new Vector2(-154.75F, 16.375F), new Vector2(-151F, 24.5F), new Vector2(-139.5F, 24.5F));
                    builder.AddCubicBezier(new Vector2(-128F, 24.5F), new Vector2(-123.25F, 16.375F), new Vector2(-115F, 16.375F));
                    builder.AddCubicBezier(new Vector2(-106.75F, 16.375F), new Vector2(-98.75F, 24.5F), new Vector2(-89F, 24.5F));
                    builder.AddCubicBezier(new Vector2(-79.25F, 24.5F), new Vector2(-67.75F, 16.375F), new Vector2(-57F, 16.375F));
                    builder.AddCubicBezier(new Vector2(-46.25F, 16.375F), new Vector2(-40.5F, 24.5F), new Vector2(-28F, 24.5F));
                    builder.AddCubicBezier(new Vector2(-15.5F, 24.5F), new Vector2(-11.75F, 16.375F), new Vector2(-1.5F, 16.375F));
                    builder.AddCubicBezier(new Vector2(8.75F, 16.375F), new Vector2(16.5F, 24.5F), new Vector2(25F, 24.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(162.75F, 212.5F));
                    builder.AddCubicBezier(new Vector2(126.712997F, 212.5F), new Vector2(97.5F, 241.712997F), new Vector2(97.5F, 277.75F));
                    builder.AddCubicBezier(new Vector2(97.5F, 313.786987F), new Vector2(126.462997F, 334F), new Vector2(162.5F, 334F));
                    builder.AddCubicBezier(new Vector2(198.537003F, 334F), new Vector2(228F, 313.786987F), new Vector2(228F, 277.75F));
                    builder.AddCubicBezier(new Vector2(228F, 241.712997F), new Vector2(198.787003F, 212.5F), new Vector2(162.75F, 212.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(162.75F, 212.5F));
                    builder.AddCubicBezier(new Vector2(126.712997F, 212.5F), new Vector2(97.5F, 241.712997F), new Vector2(97.5F, 277.75F));
                    builder.AddCubicBezier(new Vector2(97.5F, 313.786987F), new Vector2(126.462997F, 289F), new Vector2(162.5F, 289F));
                    builder.AddCubicBezier(new Vector2(198.537003F, 289F), new Vector2(228F, 313.786987F), new Vector2(228F, 277.75F));
                    builder.AddCubicBezier(new Vector2(228F, 241.712997F), new Vector2(198.787003F, 212.5F), new Vector2(162.75F, 212.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlack_FF141414()
            {
                return (_colorBrush_AlmostBlack_FF141414 == null)
                    ? _colorBrush_AlmostBlack_FF141414 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x14, 0x14, 0x14))
                    : _colorBrush_AlmostBlack_FF141414;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // ShapeGroup: Shape 1
            CompositionColorBrush ColorBrush_AlmostBlack_FF161616()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x16, 0x16, 0x16));
            }

            CompositionColorBrush ColorBrush_AlmostDodgerBlue_FF269EFF()
            {
                return (_colorBrush_AlmostDodgerBlue_FF269EFF == null)
                    ? _colorBrush_AlmostDodgerBlue_FF269EFF = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x26, 0x9E, 0xFF))
                    : _colorBrush_AlmostDodgerBlue_FF269EFF;
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return (_colorBrush_Black == null)
                    ? _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00))
                    : _colorBrush_Black;
            }

            // - - - Shape tree root for layer: Shape Layer 1
            // - ShapeGroup: Ellipse 1 Offset:<3, 1>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostGoldenrod_FFE9BE28()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xE9, 0xBE, 0x28));
            }

            // Stop 0
            CompositionColorGradientStop GradientStop_0_White()
            {
                return (_gradientStop_0_White == null)
                    ? _gradientStop_0_White = _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF))
                    : _gradientStop_0_White;
            }

            // Stop 1
            CompositionColorGradientStop GradientStop_0p899_AlmostLightGray_FFD0D0D0()
            {
                return (_gradientStop_0p899_AlmostLightGray_FFD0D0D0 == null)
                    ? _gradientStop_0p899_AlmostLightGray_FFD0D0D0 = _c.CreateColorGradientStop(0.898999989F, Color.FromArgb(0xFF, 0xD0, 0xD0, 0xD0))
                    : _gradientStop_0p899_AlmostLightGray_FFD0D0D0;
            }

            // Stop 2
            CompositionColorGradientStop GradientStop_1_AlmostDarkGray_FFA2A2A2()
            {
                return (_gradientStop_1_AlmostDarkGray_FFA2A2A2 == null)
                    ? _gradientStop_1_AlmostDarkGray_FFA2A2A2 = _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xA2, 0xA2, 0xA2))
                    : _gradientStop_1_AlmostDarkGray_FFA2A2A2;
            }

            // - - - Shape tree root for layer: Shape Layer 1
            // - ShapeGroup: Ellipse 1 Offset:<3, 1>
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostGoldenrod_FFEA8F29()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xEA, 0x8F, 0x29));
            }

            // Shape tree root for layer: Shape Layer 1
            CompositionContainerShape ContainerShape_00()
            {
                if (_containerShape_00 != null) { return _containerShape_00; }
                var result = _containerShape_00 = _c.CreateContainerShape();
                // ShapeGroup: Ellipse 1 Offset:<3, 1>
                result.Shapes.Add(SpriteShape_00());
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // Layer aggregator
            CompositionContainerShape ContainerShape_01()
            {
                if (_containerShape_01 != null) { return _containerShape_01; }
                var result = _containerShape_01 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-77.5F, -27.0739994F);
                result.Offset = new Vector2(240F, 260F);
                // ShapeGroup: Ellipse 2
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // Layer aggregator
            CompositionContainerShape ContainerShape_02()
            {
                if (_containerShape_02 != null) { return _containerShape_02; }
                var result = _containerShape_02 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-77.5F, -25.5F);
                result.Offset = new Vector2(414F, 260F);
                // ShapeGroup: Ellipse 2
                result.Shapes.Add(SpriteShape_04());
                return result;
            }

            // - - - - - - - - PreComp layer: L tear Comp
            // - - - Transforms for Shape Layer 1
            // - - Transforms for face
            // - Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // Shape tree root for layer: L tear
            CompositionContainerShape ContainerShape_03()
            {
                if (_containerShape_03 != null) { return _containerShape_03; }
                var result = _containerShape_03 = _c.CreateContainerShape();
                // Transforms: L tear
                result.Shapes.Add(ContainerShape_04());
                return result;
            }

            // - - - - - - - - - PreComp layer: L tear Comp
            // - - - - Transforms for Shape Layer 1
            // - - - Transforms for face
            // - - Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // - Shape tree root for layer: L tear
            // Transforms for L tear
            CompositionContainerShape ContainerShape_04()
            {
                if (_containerShape_04 != null) { return _containerShape_04; }
                var result = _containerShape_04 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_12());
                // ShapeGroup: Shape 2 Offset:<211.5, 0>
                shapes.Add(SpriteShape_13());
                // ShapeGroup: Shape 3 Offset:<423.25, 0>
                shapes.Add(SpriteShape_14());
                return result;
            }

            // - - - - - PreComp layer: L tear Comp
            // Masks
            CompositionContainerShape ContainerShape_05()
            {
                if (_containerShape_05 != null) { return _containerShape_05; }
                var result = _containerShape_05 = _c.CreateContainerShape();
                // Transforms: face
                result.Shapes.Add(ContainerShape_06());
                return result;
            }

            // - - - - - - PreComp layer: L tear Comp
            // - Masks
            // Transforms for face
            CompositionContainerShape ContainerShape_06()
            {
                if (_containerShape_06 != null) { return _containerShape_06; }
                var result = _containerShape_06 = _c.CreateContainerShape();
                // Transforms: L tear Comp Offset:<0, -49.5>
                result.Shapes.Add(SpriteShape_15());
                return result;
            }

            // - - - - - - - - PreComp layer: L tear Comp
            // - - - Transforms for Shape Layer 1
            // - - Transforms for face
            // - Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // Shape tree root for layer: L tear
            CompositionContainerShape ContainerShape_07()
            {
                if (_containerShape_07 != null) { return _containerShape_07; }
                var result = _containerShape_07 = _c.CreateContainerShape();
                // Transforms: L tear
                result.Shapes.Add(ContainerShape_08());
                return result;
            }

            // - - - - - - - - - PreComp layer: L tear Comp
            // - - - - Transforms for Shape Layer 1
            // - - - Transforms for face
            // - - Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // - Shape tree root for layer: L tear
            // Transforms for L tear
            CompositionContainerShape ContainerShape_08()
            {
                if (_containerShape_08 != null) { return _containerShape_08; }
                var result = _containerShape_08 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_16());
                // ShapeGroup: Shape 2 Offset:<211.5, 0>
                shapes.Add(SpriteShape_17());
                // ShapeGroup: Shape 3 Offset:<423.25, 0>
                shapes.Add(SpriteShape_18());
                return result;
            }

            // - - - - - PreComp layer: L tear Comp
            // Masks
            CompositionContainerShape ContainerShape_09()
            {
                if (_containerShape_09 != null) { return _containerShape_09; }
                var result = _containerShape_09 = _c.CreateContainerShape();
                // Transforms: face
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // - - - - - - PreComp layer: L tear Comp
            // - Masks
            // Transforms for face
            CompositionContainerShape ContainerShape_10()
            {
                if (_containerShape_10 != null) { return _containerShape_10; }
                var result = _containerShape_10 = _c.CreateContainerShape();
                // Transforms: L tear Comp Scale:-1,1, Offset:<174, -47.5>
                result.Shapes.Add(SpriteShape_19());
                return result;
            }

            // PreComp layer: L tear Comp
            CompositionEffectBrush EffectBrush_0()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // PreComp layer: L tear Comp
            CompositionEffectBrush EffectBrush_1()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                if (_effectFactory != null) { return _effectFactory; }
                var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 1
            // ShapeGroup: Ellipse 1 Offset:<3, 1>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_231()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(231F, 231F);
                return result;
            }

            CompositionPath Path_00()
            {
                if (_path_00 != null) { return _path_00; }
                var result = _path_00 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_01()
            {
                if (_path_01 != null) { return _path_01; }
                var result = _path_01 = new CompositionPath(Geometry_01());
                return result;
            }

            CompositionPath Path_02()
            {
                if (_path_02 != null) { return _path_02; }
                var result = _path_02 = new CompositionPath(Geometry_02());
                return result;
            }

            CompositionPath Path_03()
            {
                if (_path_03 != null) { return _path_03; }
                var result = _path_03 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_04()
            {
                if (_path_04 != null) { return _path_04; }
                var result = _path_04 = new CompositionPath(Geometry_04());
                return result;
            }

            CompositionPath Path_05()
            {
                if (_path_05 != null) { return _path_05; }
                var result = _path_05 = new CompositionPath(Geometry_05());
                return result;
            }

            CompositionPath Path_06()
            {
                if (_path_06 != null) { return _path_06; }
                var result = _path_06 = new CompositionPath(Geometry_06());
                return result;
            }

            CompositionPath Path_07()
            {
                if (_path_07 != null) { return _path_07; }
                var result = _path_07 = new CompositionPath(Geometry_07());
                return result;
            }

            CompositionPath Path_08()
            {
                if (_path_08 != null) { return _path_08; }
                var result = _path_08 = new CompositionPath(Geometry_08());
                return result;
            }

            CompositionPath Path_09()
            {
                if (_path_09 != null) { return _path_09; }
                var result = _path_09 = new CompositionPath(Geometry_10());
                return result;
            }

            CompositionPath Path_10()
            {
                if (_path_10 != null) { return _path_10; }
                var result = _path_10 = new CompositionPath(Geometry_11());
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Offset:<240, 260>
            CompositionPathGeometry PathGeometry_00()
            {
                if (_pathGeometry_00 != null) { return _pathGeometry_00; }
                var result = _pathGeometry_00 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // ShapeGroup: Ellipse 2
            CompositionPathGeometry PathGeometry_01()
            {
                if (_pathGeometry_01 != null) { return _pathGeometry_01; }
                var result = _pathGeometry_01 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Offset:<414, 260>
            CompositionPathGeometry PathGeometry_02()
            {
                if (_pathGeometry_02 != null) { return _pathGeometry_02; }
                var result = _pathGeometry_02 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // ShapeGroup: Ellipse 2
            CompositionPathGeometry PathGeometry_03()
            {
                if (_pathGeometry_03 != null) { return _pathGeometry_03; }
                var result = _pathGeometry_03 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_04()
            {
                if (_pathGeometry_04 != null) { return _pathGeometry_04; }
                var result = _pathGeometry_04 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_05()
            {
                if (_pathGeometry_05 != null) { return _pathGeometry_05; }
                var result = _pathGeometry_05 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_05, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_05);
                BindProperty(_pathGeometry_05, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_05);
                return result;
            }

            CompositionPathGeometry PathGeometry_06()
            {
                if (_pathGeometry_06 != null) { return _pathGeometry_06; }
                var result = _pathGeometry_06 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_06, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_06);
                BindProperty(_pathGeometry_06, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_06);
                return result;
            }

            CompositionPathGeometry PathGeometry_07()
            {
                if (_pathGeometry_07 != null) { return _pathGeometry_07; }
                var result = _pathGeometry_07 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_07, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_07);
                BindProperty(_pathGeometry_07, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_07);
                return result;
            }

            CompositionPathGeometry PathGeometry_08()
            {
                if (_pathGeometry_08 != null) { return _pathGeometry_08; }
                var result = _pathGeometry_08 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_08, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_08);
                BindProperty(_pathGeometry_08, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_08);
                return result;
            }

            CompositionPathGeometry PathGeometry_09()
            {
                if (_pathGeometry_09 != null) { return _pathGeometry_09; }
                var result = _pathGeometry_09 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_09, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_09);
                BindProperty(_pathGeometry_09, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_09);
                return result;
            }

            CompositionPathGeometry PathGeometry_10()
            {
                if (_pathGeometry_10 != null) { return _pathGeometry_10; }
                var result = _pathGeometry_10 = _c.CreatePathGeometry(Path_08());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_10, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_10);
                BindProperty(_pathGeometry_10, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_10);
                return result;
            }

            CompositionPathGeometry PathGeometry_11()
            {
                return (_pathGeometry_11 == null)
                    ? _pathGeometry_11 = _c.CreatePathGeometry(new CompositionPath(Geometry_09()))
                    : _pathGeometry_11;
            }

            CompositionPathGeometry PathGeometry_12()
            {
                if (_pathGeometry_12 != null) { return _pathGeometry_12; }
                var result = _pathGeometry_12 = _c.CreatePathGeometry();
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 1
            // ShapeGroup: Ellipse 1 Offset:<3, 1>
            CompositionRadialGradientBrush RadialGradientBrush_0()
            {
                var result = _c.CreateRadialGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostGoldenrod_FFE9BE28());
                colorStops.Add(GradientStop_1_AlmostGoldenrod_FFEA8F29());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.EllipseCenter = new Vector2(106F, -198F);
                result.EllipseRadius = new Vector2(468.802734F, 468.802734F);
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Offset:<240, 260>
            CompositionRadialGradientBrush RadialGradientBrush_1()
            {
                var result = _c.CreateRadialGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_White());
                colorStops.Add(GradientStop_0p899_AlmostLightGray_FFD0D0D0());
                colorStops.Add(GradientStop_1_AlmostDarkGray_FFA2A2A2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.EllipseCenter = new Vector2(0F, 0F);
                result.EllipseRadius = new Vector2(100F, 100F);
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Offset:<414, 260>
            CompositionRadialGradientBrush RadialGradientBrush_2()
            {
                var result = _c.CreateRadialGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_White());
                colorStops.Add(GradientStop_0p899_AlmostLightGray_FFD0D0D0());
                colorStops.Add(GradientStop_1_AlmostDarkGray_FFA2A2A2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.EllipseCenter = new Vector2(0F, 0F);
                result.EllipseRadius = new Vector2(100F, 100F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<3, 1>
                var geometry = Ellipse_231();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 3F, 1F), RadialGradientBrush_0());;
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<162.5, 228.5>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 162.5F, 228.5F), RadialGradientBrush_1());;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                if (_spriteShape_02 != null) { return _spriteShape_02; }
                var result = _spriteShape_02 = _c.CreateSpriteShape(PathGeometry_01());
                result.FillBrush = ColorBrush_AlmostBlack_FF141414();
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<336.5, 228.5>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 336.5F, 228.5F), RadialGradientBrush_2());;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                if (_spriteShape_04 != null) { return _spriteShape_04; }
                var result = _spriteShape_04 = _c.CreateSpriteShape(PathGeometry_03());
                result.FillBrush = ColorBrush_AlmostBlack_FF141414();
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                if (_spriteShape_05 != null) { return _spriteShape_05; }
                var result = _spriteShape_05 = _c.CreateSpriteShape(PathGeometry_04());
                result.StrokeBrush = ColorBrush_AlmostBlack_FF161616();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<250, 250>
                if (_spriteShape_06 != null) { return _spriteShape_06; }
                var result = _spriteShape_06 = CreateSpriteShape(PathGeometry_05(), new Matrix3x2(1F, 0F, 0F, 1F, 250F, 250F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<50, 210>
                if (_spriteShape_07 != null) { return _spriteShape_07; }
                var result = _spriteShape_07 = CreateSpriteShape(PathGeometry_06(), new Matrix3x2(1F, 0F, 0F, 1F, 50F, 210F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<250, 250>
                if (_spriteShape_08 != null) { return _spriteShape_08; }
                var result = _spriteShape_08 = CreateSpriteShape(PathGeometry_07(), new Matrix3x2(1F, 0F, 0F, 1F, 250F, 250F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<50, 250>
                if (_spriteShape_09 != null) { return _spriteShape_09; }
                var result = _spriteShape_09 = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(1F, 0F, 0F, 1F, 50F, 250F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<250, 250>
                if (_spriteShape_10 != null) { return _spriteShape_10; }
                var result = _spriteShape_10 = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(1F, 0F, 0F, 1F, 250F, 250F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - PreComp layer: tears
            // Transforms for tears Scale(1,1,0)
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<50, 250>
                if (_spriteShape_11 != null) { return _spriteShape_11; }
                var result = _spriteShape_11 = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(1F, 0F, 0F, 1F, 50F, 250F));;
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28.2999992F;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                var result = _c.CreateSpriteShape(PathGeometry_11());
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<211.5, 0>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(1F, 0F, 0F, 1F, 211.5F, 0F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<423.25, 0>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(1F, 0F, 0F, 1F, 423.25F, 0F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - PreComp layer: L tear Comp
            // - - Masks
            // Transforms: face
            // Transforms for L tear Comp Offset:<0, -49.5>
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<0, -49.5>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, -49.5F), ColorBrush_Black());;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                var result = _c.CreateSpriteShape(PathGeometry_11());
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<211.5, 0>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(1F, 0F, 0F, 1F, 211.5F, 0F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - - - - PreComp layer: L tear Comp
            // - - - - - Transforms for Shape Layer 1
            // - - - - Transforms for face
            // - - - Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // - - Shape tree root for layer: L tear
            // Transforms: L tear
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                // Offset:<423.25, 0>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(1F, 0F, 0F, 1F, 423.25F, 0F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF269EFF();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 28F;
                return result;
            }

            // - - - - - - - PreComp layer: L tear Comp
            // - - Masks
            // Transforms: face
            // Transforms for L tear Comp Scale:-1,1, Offset:<174, -47.5>
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<499.5, -47.5>, Rotation:-180 degrees, Scale:<1, -1>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(-1F, 0F, 0F, 1F, 499.5F, -47.5F), ColorBrush_Black());;
                return result;
            }

            // - PreComp layer: L tear Comp
            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            // - PreComp layer: L tear Comp
            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            // - PreComp layer: L tear Comp
            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            // - PreComp layer: L tear Comp
            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            // - - PreComp layer: L tear Comp
            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_04();
                result.SourceSize = new Vector2(500F, 600F);
                return result;
            }

            // - - PreComp layer: L tear Comp
            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_08();
                result.SourceSize = new Vector2(500F, 600F);
                return result;
            }

            // - - PreComp layer: L tear Comp
            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_09();
                result.SourceSize = new Vector2(500F, 600F);
                return result;
            }

            // - - PreComp layer: L tear Comp
            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_13();
                result.SourceSize = new Vector2(500F, 600F);
                return result;
            }

            // Transforms for Shape Layer 1
            ContainerVisual ContainerVisual_00()
            {
                if (_containerVisual_00 != null) { return _containerVisual_00; }
                var result = _containerVisual_00 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(3F, 1F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                // Transforms for face
                result.Children.InsertAtTop(ContainerVisual_01());
                return result;
            }

            // PreComp layer: face
            // Transforms for face
            ContainerVisual ContainerVisual_01()
            {
                if (_containerVisual_01 != null) { return _containerVisual_01; }
                var result = _containerVisual_01 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(250F, 250F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                result.Children.InsertAtTop(ContainerVisual_02());
                return result;
            }

            // - PreComp layer: face
            // Transforms for face
            ContainerVisual ContainerVisual_02()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(500F, 500F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_1());
                // PreComp layer: tears
                children.InsertAtTop(ContainerVisual_03());
                return result;
            }

            // - - PreComp layer: face
            // - Transforms for face
            // PreComp layer: tears
            ContainerVisual ContainerVisual_03()
            {
                if (_containerVisual_03 != null) { return _containerVisual_03; }
                var result = _containerVisual_03 = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.IsVisible = false;
                result.Size = new Vector2(500F, 500F);
                // Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 1F);
                // Transforms for tears Scale(1,1,0)
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            // - - - PreComp layer: L tear Comp
            ContainerVisual ContainerVisual_04()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Transforms for Shape Layer 1
                result.Children.InsertAtTop(ContainerVisual_05());
                return result;
            }

            // - - - - PreComp layer: L tear Comp
            // Transforms for Shape Layer 1
            ContainerVisual ContainerVisual_05()
            {
                if (_containerVisual_05 != null) { return _containerVisual_05; }
                var result = _containerVisual_05 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(3F, 1F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                // Transforms for face
                result.Children.InsertAtTop(ContainerVisual_06());
                return result;
            }

            // - - - - - PreComp layer: L tear Comp
            // Transforms for Shape Layer 1
            // Transforms for face
            ContainerVisual ContainerVisual_06()
            {
                if (_containerVisual_06 != null) { return _containerVisual_06; }
                var result = _containerVisual_06 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(250F, 250F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                // Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
                result.Children.InsertAtTop(ContainerVisual_07());
                return result;
            }

            // - - - - - - PreComp layer: L tear Comp
            // - Transforms for Shape Layer 1
            // Transforms for face
            // Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            ContainerVisual ContainerVisual_07()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(500F, 600F);
                // Offset:<0, -49.5>, Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, -49.5F, 0F, 1F);
                // Shape tree root for layer: L tear
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            // - - - PreComp layer: L tear Comp
            ContainerVisual ContainerVisual_08()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            // - - - PreComp layer: L tear Comp
            ContainerVisual ContainerVisual_09()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Transforms for Shape Layer 1
                result.Children.InsertAtTop(ContainerVisual_10());
                return result;
            }

            // - - - - PreComp layer: L tear Comp
            // Transforms for Shape Layer 1
            ContainerVisual ContainerVisual_10()
            {
                if (_containerVisual_10 != null) { return _containerVisual_10; }
                var result = _containerVisual_10 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(3F, 1F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                // Transforms for face
                result.Children.InsertAtTop(ContainerVisual_11());
                return result;
            }

            // - - - - - PreComp layer: L tear Comp
            // Transforms for Shape Layer 1
            // Transforms for face
            ContainerVisual ContainerVisual_11()
            {
                if (_containerVisual_11 != null) { return _containerVisual_11; }
                var result = _containerVisual_11 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(250F, 250F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                // Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
                result.Children.InsertAtTop(ContainerVisual_12());
                return result;
            }

            // - - - - - - PreComp layer: L tear Comp
            // - Transforms for Shape Layer 1
            // Transforms for face
            // Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            ContainerVisual ContainerVisual_12()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(500F, 600F);
                // Offset:<499.5, -47.5>, Rotation:{X:0 Y:1 Z:0 W:0}, Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(-1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 499.5F, -47.5F, 0F, 1F);
                // Shape tree root for layer: L tear
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            // - - - PreComp layer: L tear Comp
            ContainerVisual ContainerVisual_13()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Shape tree root for layer: Shape Layer 1
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: face
                children.InsertAtTop(ContainerVisual_00());
                // PreComp layer: L tear Comp
                children.InsertAtTop(SpriteVisual_0());
                // PreComp layer: L tear Comp
                children.InsertAtTop(SpriteVisual_1());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.610000014F, 0F), new Vector2(0.389999986F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.800000012F, 0F), new Vector2(0F, 1F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.200000003F, 1F))
                    : _cubicBezierEasingFunction_2;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return (_cubicBezierEasingFunction_3 == null)
                    ? _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_3;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return (_cubicBezierEasingFunction_4 == null)
                    ? _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_4;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return (_cubicBezierEasingFunction_5 == null)
                    ? _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 1F))
                    : _cubicBezierEasingFunction_5;
            }

            InsetClip InsetClip_0()
            {
                if (_insetClip_0 != null) { return _insetClip_0; }
                var result = _insetClip_0 = _c.CreateInsetClip();
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // -  Offset:<240, 260>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_00(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_00(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_01(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_00(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_01(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_00(), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - - - PreComp layer: face
            // - - - - - Transforms for face
            // - - - Layer aggregator
            // - ShapeGroup: Ellipse 2
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_02(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_02(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_03(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_02(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_03(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_02(), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // -  Offset:<414, 260>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_00(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_00(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_04(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_00(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_04(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_00(), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - - - PreComp layer: face
            // - - - - - Transforms for face
            // - - - Layer aggregator
            // - ShapeGroup: Ellipse 2
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_02(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_02(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_05(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_02(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_05(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_02(), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_06(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_06(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_07(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_06(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_07(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_06(), CubicBezierEasingFunction_3());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_5()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_09(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, Path_09(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, Path_10(), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, Path_09(), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, Path_10(), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, Path_09(), CubicBezierEasingFunction_3());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.039682541F, 0F, HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.111111112F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.126984134F, 0F, HoldThenStepEasingFunction());
                // Frame 25.
                result.InsertKeyFrame(0.198412701F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_2()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 45.
                result.InsertKeyFrame(0.357142866F, 0F, HoldThenStepEasingFunction());
                // Frame 54.
                result.InsertKeyFrame(0.428571433F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_3()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 56.
                result.InsertKeyFrame(0.444444448F, 0F, HoldThenStepEasingFunction());
                // Frame 65.
                result.InsertKeyFrame(0.515873015F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_4()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 88.
                result.InsertKeyFrame(0.698412716F, 0F, HoldThenStepEasingFunction());
                // Frame 97.
                result.InsertKeyFrame(0.769841254F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_5()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 99.
                result.InsertKeyFrame(0.785714269F, 0F, HoldThenStepEasingFunction());
                // Frame 108.
                result.InsertKeyFrame(0.857142866F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0476190485F, 0F, HoldThenStepEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.119047619F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.134920642F, 0F, HoldThenStepEasingFunction());
                // Frame 26.
                result.InsertKeyFrame(0.206349209F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_2()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 46.
                result.InsertKeyFrame(0.365079373F, 0F, HoldThenStepEasingFunction());
                // Frame 55.
                result.InsertKeyFrame(0.43650794F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_3()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 57.
                result.InsertKeyFrame(0.452380955F, 0F, HoldThenStepEasingFunction());
                // Frame 66.
                result.InsertKeyFrame(0.523809552F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_4()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 89.
                result.InsertKeyFrame(0.706349194F, 0F, HoldThenStepEasingFunction());
                // Frame 98.
                result.InsertKeyFrame(0.777777791F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_5()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 100.
                result.InsertKeyFrame(0.793650806F, 0F, HoldThenStepEasingFunction());
                // Frame 109.
                result.InsertKeyFrame(0.865079343F, 1F, CubicBezierEasingFunction_4());
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 600F);
                result.Shapes.Add(ContainerShape_00());
                return result;
            }

            // - - PreComp layer: face
            // - Transforms for face
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                var shapes = result.Shapes;
                // Offset:<240, 260>
                shapes.Add(SpriteShape_01());
                shapes.Add(ContainerShape_01());
                // Offset:<414, 260>
                shapes.Add(SpriteShape_03());
                shapes.Add(ContainerShape_02());
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_05());
                return result;
            }

            // - - - PreComp layer: face
            // - - Transforms for face
            // PreComp layer: tears
            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                var shapes = result.Shapes;
                // Layer: Shape Layer 5
                shapes.Add(SpriteShape_06());
                // Layer: Shape Layer 6
                shapes.Add(SpriteShape_07());
                // Layer: Shape Layer 7
                shapes.Add(SpriteShape_08());
                // Layer: Shape Layer 8
                shapes.Add(SpriteShape_09());
                // Layer: Shape Layer 9
                shapes.Add(SpriteShape_10());
                // Layer: Shape Layer 10
                shapes.Add(SpriteShape_11());
                return result;
            }

            // - - - - - - - PreComp layer: L tear Comp
            // - - Transforms for Shape Layer 1
            // - Transforms for face
            // Transforms for L tear Comp Scale(1,1,0), Offset(0,-49.5,0)
            // Shape tree root for layer: L tear
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 600F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - - - PreComp layer: L tear Comp
            // Masks
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 600F);
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // - - - - - - - PreComp layer: L tear Comp
            // - - Transforms for Shape Layer 1
            // - Transforms for face
            // Transforms for L tear Comp Scale(-1,1,0), Offset(174,-47.5,0)
            // Shape tree root for layer: L tear
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 600F);
                result.Shapes.Add(ContainerShape_07());
                return result;
            }

            // - - - - PreComp layer: L tear Comp
            // Masks
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 600F);
                result.Shapes.Add(ContainerShape_09());
                return result;
            }

            // PreComp layer: L tear Comp
            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(500F, 600F);
                result.Brush = EffectBrush_0();
                return result;
            }

            // PreComp layer: L tear Comp
            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(500F, 600F);
                result.Brush = EffectBrush_1();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                if (_offsetVector2Animation_0 != null) { return _offsetVector2Animation_0; }
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(247F, 299F), HoldThenStepEasingFunction());
                // Frame 21.26.
                result.InsertKeyFrame(0.168722227F, new Vector2(247F, 289F), CubicBezierEasingFunction_0());
                // Frame 41.67.
                result.InsertKeyFrame(0.330690473F, new Vector2(247F, 299F), CubicBezierEasingFunction_0());
                // Frame 62.93.
                result.InsertKeyFrame(0.499412686F, new Vector2(247F, 289F), CubicBezierEasingFunction_0());
                // Frame 83.33.
                result.InsertKeyFrame(0.661373019F, new Vector2(247F, 299F), CubicBezierEasingFunction_0());
                // Frame 104.59.
                result.InsertKeyFrame(0.830095232F, new Vector2(247F, 289F), CubicBezierEasingFunction_0());
                // Frame 125.
                result.InsertKeyFrame(0.992063463F, new Vector2(247F, 299F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // ShapeGroup: Ellipse 2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-77.5F, -26.5F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(-77.5F, -26.5F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(-77.5F, -34.5F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(-77.5F, -26.5F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(-77.5F, -34.5F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(-77.5F, -26.5F), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - Layer aggregator
            // ShapeGroup: Ellipse 2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-77.5F, -25.5F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(-77.5F, -25.5F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(-77.5F, -33.5F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(-77.5F, -25.5F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(-77.5F, -33.5F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(-77.5F, -25.5F), CubicBezierEasingFunction_3());
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(291.75F, 214F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(291.75F, 214F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(291.75F, 194F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(291.75F, 214F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(291.75F, 194F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(291.75F, 214F), CubicBezierEasingFunction_3());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_4()
            {
                // Frame 0.
                if (_offsetVector2Animation_4 != null) { return _offsetVector2Animation_4; }
                var result = _offsetVector2Animation_4 = CreateVector2KeyFrameAnimation(0F, new Vector2(100F, 57.8129997F), HoldThenStepEasingFunction());
                // Frame 125.
                result.InsertKeyFrame(0.992063463F, new Vector2(-324F, 57.8129997F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_5()
            {
                // Frame 0.
                if (_offsetVector2Animation_5 != null) { return _offsetVector2Animation_5; }
                var result = _offsetVector2Animation_5 = CreateVector2KeyFrameAnimation(0F, new Vector2(200F, 250F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(200F, 250F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(200F, 215F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(200F, 250F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(200F, 215F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(200F, 250F), CubicBezierEasingFunction_3());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_6()
            {
                // Frame 0.
                if (_offsetVector2Animation_6 != null) { return _offsetVector2Animation_6; }
                var result = _offsetVector2Animation_6 = CreateVector2KeyFrameAnimation(0F, new Vector2(-247F, -249F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(-247F, -249F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(-247F, -269F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(-247F, -249F), CubicBezierEasingFunction_5());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(-247F, -269F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(-247F, -249F), CubicBezierEasingFunction_2());
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1.30999994F, 1.30999994F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(1.30999994F, 1.30999994F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(1.30999994F, 1.30999994F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(1.30999994F, 1.30999994F), CubicBezierEasingFunction_2());
                return result;
            }

            // - - - - PreComp layer: face
            // - - - Transforms for face
            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1.30999994F, 1.30999994F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector2(1.30999994F, 1.30999994F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(1.30999994F, 1.30999994F), CubicBezierEasingFunction_2());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector2(1.20000005F, 1.20000005F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector2(1.30999994F, 1.30999994F), _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 5
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.039682541F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.126984134F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 6
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.126984134F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 7
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 45.
                result.InsertKeyFrame(0.357142866F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 56.
                result.InsertKeyFrame(0.444444448F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 8
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 56.
                result.InsertKeyFrame(0.444444448F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 67.
                result.InsertKeyFrame(0.53174603F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 9
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_4()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 88.
                result.InsertKeyFrame(0.698412716F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 99.
                result.InsertKeyFrame(0.785714269F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - - - PreComp layer: face
            // - - - - Transforms for face
            // - - PreComp layer: tears
            // - Transforms for tears Scale(1,1,0)
            // Layer: Shape Layer 10
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_5()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 99.
                result.InsertKeyFrame(0.785714269F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 110.
                result.InsertKeyFrame(0.873015881F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_0()
            {
                // Frame 0.
                if (_offsetVector3Animation_0 != null) { return _offsetVector3Animation_0; }
                var result = _offsetVector3Animation_0 = CreateVector3KeyFrameAnimation(0F, new Vector3(-247F, -249F, 0F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0793650821F, new Vector3(-247F, -249F, 0F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.158730164F, new Vector3(-247F, -269F, 0F), CubicBezierEasingFunction_1());
                // Frame 27.
                result.InsertKeyFrame(0.214285716F, new Vector3(-247F, -249F, 0F), CubicBezierEasingFunction_5());
                // Frame 37.
                result.InsertKeyFrame(0.293650806F, new Vector3(-247F, -269F, 0F), CubicBezierEasingFunction_1());
                // Frame 44.
                result.InsertKeyFrame(0.349206358F, new Vector3(-247F, -249F, 0F), CubicBezierEasingFunction_2());
                return result;
            }

            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_1()
            {
                // Frame 0.
                if (_offsetVector3Animation_1 != null) { return _offsetVector3Animation_1; }
                var result = _offsetVector3Animation_1 = CreateVector3KeyFrameAnimation(0F, new Vector3(247F, 299F, 0F), HoldThenStepEasingFunction());
                // Frame 21.26.
                result.InsertKeyFrame(0.168722227F, new Vector3(247F, 289F, 0F), CubicBezierEasingFunction_0());
                // Frame 41.67.
                result.InsertKeyFrame(0.330690473F, new Vector3(247F, 299F, 0F), CubicBezierEasingFunction_0());
                // Frame 62.93.
                result.InsertKeyFrame(0.499412686F, new Vector3(247F, 289F, 0F), CubicBezierEasingFunction_0());
                // Frame 83.33.
                result.InsertKeyFrame(0.661373019F, new Vector3(247F, 299F, 0F), CubicBezierEasingFunction_0());
                // Frame 104.59.
                result.InsertKeyFrame(0.830095232F, new Vector3(247F, 289F, 0F), CubicBezierEasingFunction_0());
                // Frame 125.
                result.InsertKeyFrame(0.992063463F, new Vector3(247F, 299F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Crying_emoji_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(500F, 600F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_00.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_01.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerShape_02.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _containerShape_03.StartAnimation("Offset", OffsetVector2Animation_5(), AnimationController_0());
                _containerShape_04.StartAnimation("Offset", OffsetVector2Animation_4(), AnimationController_0());
                _containerShape_05.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_06.StartAnimation("Offset", OffsetVector2Animation_6(), AnimationController_0());
                _containerShape_07.StartAnimation("Offset", OffsetVector2Animation_5(), AnimationController_0());
                _containerShape_08.StartAnimation("Offset", OffsetVector2Animation_4(), AnimationController_0());
                _containerShape_09.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_10.StartAnimation("Offset", OffsetVector2Animation_6(), AnimationController_0());
                _pathGeometry_00.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _pathGeometry_01.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
                _pathGeometry_02.StartAnimation("Path", PathKeyFrameAnimation_2(), AnimationController_0());
                _pathGeometry_03.StartAnimation("Path", PathKeyFrameAnimation_3(), AnimationController_0());
                _pathGeometry_04.StartAnimation("Path", PathKeyFrameAnimation_4(), AnimationController_0());
                _pathGeometry_05.StartAnimation("TStart", TStartScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_05.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_06.StartAnimation("TStart", TStartScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_06.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_07.StartAnimation("TStart", TStartScalarAnimation_0_to_1_2(), AnimationController_0());
                _pathGeometry_07.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_2(), AnimationController_0());
                _pathGeometry_08.StartAnimation("TStart", TStartScalarAnimation_0_to_1_3(), AnimationController_0());
                _pathGeometry_08.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_3(), AnimationController_0());
                _pathGeometry_09.StartAnimation("TStart", TStartScalarAnimation_0_to_1_4(), AnimationController_0());
                _pathGeometry_09.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_4(), AnimationController_0());
                _pathGeometry_10.StartAnimation("TStart", TStartScalarAnimation_0_to_1_5(), AnimationController_0());
                _pathGeometry_10.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_5(), AnimationController_0());
                _pathGeometry_12.StartAnimation("Path", PathKeyFrameAnimation_5(), AnimationController_0());
                _spriteShape_02.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _spriteShape_04.StartAnimation("Offset", OffsetVector2Animation_2(), AnimationController_0());
                _spriteShape_05.StartAnimation("Offset", OffsetVector2Animation_3(), AnimationController_0());
                _spriteShape_06.StartAnimation("Scale", ShapeVisibilityAnimation_0(), AnimationController_0());
                _spriteShape_07.StartAnimation("Scale", ShapeVisibilityAnimation_1(), AnimationController_0());
                _spriteShape_08.StartAnimation("Scale", ShapeVisibilityAnimation_2(), AnimationController_0());
                _spriteShape_09.StartAnimation("Scale", ShapeVisibilityAnimation_3(), AnimationController_0());
                _spriteShape_10.StartAnimation("Scale", ShapeVisibilityAnimation_4(), AnimationController_0());
                _spriteShape_11.StartAnimation("Scale", ShapeVisibilityAnimation_5(), AnimationController_0());
                _containerVisual_00.StartAnimation("Offset", OffsetVector3Animation_1(), AnimationController_0());
                _containerVisual_01.StartAnimation("Offset", OffsetVector3Animation_0(), AnimationController_0());
                _containerVisual_03.StartAnimation("IsVisible", IsVisibleBooleanAnimation(), AnimationController_0());
                _containerVisual_05.StartAnimation("Offset", OffsetVector3Animation_1(), AnimationController_0());
                _containerVisual_06.StartAnimation("Offset", OffsetVector3Animation_0(), AnimationController_0());
                _containerVisual_10.StartAnimation("Offset", OffsetVector3Animation_1(), AnimationController_0());
                _containerVisual_11.StartAnimation("Offset", OffsetVector3Animation_0(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_00.StopAnimation("Offset");
                _containerShape_01.StopAnimation("Scale");
                _containerShape_02.StopAnimation("Scale");
                _containerShape_03.StopAnimation("Offset");
                _containerShape_04.StopAnimation("Offset");
                _containerShape_05.StopAnimation("Offset");
                _containerShape_06.StopAnimation("Offset");
                _containerShape_07.StopAnimation("Offset");
                _containerShape_08.StopAnimation("Offset");
                _containerShape_09.StopAnimation("Offset");
                _containerShape_10.StopAnimation("Offset");
                _pathGeometry_00.StopAnimation("Path");
                _pathGeometry_01.StopAnimation("Path");
                _pathGeometry_02.StopAnimation("Path");
                _pathGeometry_03.StopAnimation("Path");
                _pathGeometry_04.StopAnimation("Path");
                _pathGeometry_05.StopAnimation("TStart");
                _pathGeometry_05.StopAnimation("TEnd");
                _pathGeometry_06.StopAnimation("TStart");
                _pathGeometry_06.StopAnimation("TEnd");
                _pathGeometry_07.StopAnimation("TStart");
                _pathGeometry_07.StopAnimation("TEnd");
                _pathGeometry_08.StopAnimation("TStart");
                _pathGeometry_08.StopAnimation("TEnd");
                _pathGeometry_09.StopAnimation("TStart");
                _pathGeometry_09.StopAnimation("TEnd");
                _pathGeometry_10.StopAnimation("TStart");
                _pathGeometry_10.StopAnimation("TEnd");
                _pathGeometry_12.StopAnimation("Path");
                _spriteShape_02.StopAnimation("Offset");
                _spriteShape_04.StopAnimation("Offset");
                _spriteShape_05.StopAnimation("Offset");
                _spriteShape_06.StopAnimation("Scale");
                _spriteShape_07.StopAnimation("Scale");
                _spriteShape_08.StopAnimation("Scale");
                _spriteShape_09.StopAnimation("Scale");
                _spriteShape_10.StopAnimation("Scale");
                _spriteShape_11.StopAnimation("Scale");
                _containerVisual_00.StopAnimation("Offset");
                _containerVisual_01.StopAnimation("Offset");
                _containerVisual_03.StopAnimation("IsVisible");
                _containerVisual_05.StopAnimation("Offset");
                _containerVisual_06.StopAnimation("Offset");
                _containerVisual_10.StopAnimation("Offset");
                _containerVisual_11.StopAnimation("Offset");
            }

        }
    }
}
