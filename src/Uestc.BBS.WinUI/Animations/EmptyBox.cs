//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Empty Box.json
//       
//       Input file:
//           Empty Box.json (9011 bytes created 19:12+08:00 Sep 18 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    80 |
// |--------------------------+-------|
// | Expression animators     |     4 |
// | KeyFrame animators       |     7 |
// | Reference parameters     |     4 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     3 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     1 |
// | CompositionSpriteShapes  |     8 |
// |--------------------------+-------|
// | Brushes                  |     6 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Comp 1
    // Frame rate:  25 fps
    // Frame count: 50
    // Duration:    2000.0 mS
    public partial class EmptyBox
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 2.000 seconds.
        internal const long c_durationTicks = 20000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Empty_Box_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 50d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 25d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(20000000);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 50d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        public partial class Empty_Box_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 20000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66;
            CompositionColorBrush _animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C;
            CompositionColorBrush _animatedColorBrush_White_to_TransparentWhite;
            CompositionColorBrush _colorBrush_AlmostLightGray_FFCCD1D9;
            CompositionContainerShape _containerShape;
            CompositionPathGeometry _pathGeometry_4;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: box
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-32.1430016F, -24.1709995F));
                    builder.AddLine(new Vector2(-32.1430016F, 11.3109999F));
                    builder.AddLine(new Vector2(-0.00100000005F, 24.1709995F));
                    builder.AddLine(new Vector2(32.144001F, 11.3109999F));
                    builder.AddLine(new Vector2(32.144001F, -24.1709995F));
                    builder.AddLine(new Vector2(-32.1430016F, -24.1709995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: box
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-16.0720005F, 24.1709995F));
                    builder.AddLine(new Vector2(16.0720005F, 11.3120003F));
                    builder.AddLine(new Vector2(16.0720005F, -24.1709995F));
                    builder.AddLine(new Vector2(-16.0720005F, -24.1709995F));
                    builder.AddLine(new Vector2(-16.0720005F, 24.1709995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: box
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.8559999F, -23.2490005F));
                    builder.AddLine(new Vector2(0F, -16.6049995F));
                    builder.AddLine(new Vector2(-12.8570004F, -23.2490005F));
                    builder.AddLine(new Vector2(-45F, -6.64099979F));
                    builder.AddLine(new Vector2(-32.144001F, 0.00100000005F));
                    builder.AddLine(new Vector2(-45F, 6.64499998F));
                    builder.AddLine(new Vector2(-12.8570004F, 23.2490005F));
                    builder.AddLine(new Vector2(0F, 16.6089993F));
                    builder.AddLine(new Vector2(12.8559999F, 23.2490005F));
                    builder.AddLine(new Vector2(45F, 6.64499998F));
                    builder.AddLine(new Vector2(32.1430016F, 0.00100000005F));
                    builder.AddLine(new Vector2(45F, -6.64099979F));
                    builder.AddLine(new Vector2(12.8559999F, -23.2490005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: box
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -16.6070004F));
                    builder.AddLine(new Vector2(-32.1430016F, -0.00200000009F));
                    builder.AddLine(new Vector2(-0.00100000005F, 16.6070004F));
                    builder.AddLine(new Vector2(32.144001F, -0.00200000009F));
                    builder.AddLine(new Vector2(-0.00100000005F, -16.6070004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<-0.75, -0.75>
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-7.3829999F, 24.7600002F));
                    builder.AddCubicBezier(new Vector2(-12.0579996F, 20.632F), new Vector2(-20.9559994F, 10.8129997F), new Vector2(-7.046F, 5.53999996F));
                    builder.AddCubicBezier(new Vector2(5.76999998F, 0.681999981F), new Vector2(9.79500008F, 1.46099997F), new Vector2(14.3400002F, -2.273F));
                    builder.AddCubicBezier(new Vector2(20.9559994F, -7.71099997F), new Vector2(16.8509998F, -23.5529995F), new Vector2(-3.17799997F, -24.7600002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: ruoi
            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -3.61400008F));
                    builder.AddCubicBezier(new Vector2(1.99600005F, -3.61400008F), new Vector2(3.61400008F, -1.99600005F), new Vector2(3.61400008F, 0F));
                    builder.AddCubicBezier(new Vector2(3.61400008F, 1.99600005F), new Vector2(1.99600005F, 3.61400008F), new Vector2(0F, 3.61400008F));
                    builder.AddCubicBezier(new Vector2(-1.99600005F, 3.61400008F), new Vector2(-3.61400008F, 1.99600005F), new Vector2(-3.61400008F, 0F));
                    builder.AddCubicBezier(new Vector2(-3.61400008F, -1.99600005F), new Vector2(-1.99600005F, -3.61400008F), new Vector2(0F, -3.61400008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: ruoi
            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, -2.57399988F));
                    builder.AddCubicBezier(new Vector2(1.42200005F, -2.57399988F), new Vector2(2.57399988F, -1.42200005F), new Vector2(2.57399988F, 0F));
                    builder.AddCubicBezier(new Vector2(2.57399988F, 1.42200005F), new Vector2(1.42200005F, 2.57399988F), new Vector2(0.00100000005F, 2.57399988F));
                    builder.AddCubicBezier(new Vector2(-1.421F, 2.57399988F), new Vector2(-2.57399988F, 1.42200005F), new Vector2(-2.57399988F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.57399988F, -1.42200005F), new Vector2(-1.421F, -2.57399988F), new Vector2(0.00100000005F, -2.57399988F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: ruoi
            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -1.801F));
                    builder.AddCubicBezier(new Vector2(0.994000018F, -1.801F), new Vector2(1.801F, -0.995000005F), new Vector2(1.801F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(1.801F, 0.992999971F), new Vector2(0.994000018F, 1.801F), new Vector2(-0.00100000005F, 1.801F));
                    builder.AddCubicBezier(new Vector2(-0.995000005F, 1.801F), new Vector2(-1.801F, 0.992999971F), new Vector2(-1.801F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-1.801F, -0.995000005F), new Vector2(-0.995000005F, -1.801F), new Vector2(-0.00100000005F, -1.801F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-0.75, -0.75>
            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0x59, 0x5E, 0x66), StepThenHoldEasingFunction());
                // Frame 35.
                // AlmostDimGray_FF595E66
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0x59, 0x5E, 0x66), HoldThenStepEasingFunction());
                // Frame 49.
                // TransparentAlmostDimGray_00595E66
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0x59, 0x5E, 0x66), CubicBezierEasingFunction_0());
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0x6C, 0x6C, 0x6C), StepThenHoldEasingFunction());
                // Frame 35.
                // AlmostDimGray_FF6C6C6C
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0x6C, 0x6C, 0x6C), HoldThenStepEasingFunction());
                // Frame 49.
                // TransparentAlmostDimGray_006C6C6C
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0x6C, 0x6C, 0x6C), CubicBezierEasingFunction_0());
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_White_to_TransparentWhite()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), StepThenHoldEasingFunction());
                // Frame 35.
                // White
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), HoldThenStepEasingFunction());
                // Frame 49.
                // TransparentWhite
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0xFF, 0xFF, 0xFF), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Offset:<-0.75, -0.75>
            CompositionColorBrush AnimatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66()
            {
                if (_animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66 != null) { return _animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66; }
                var result = _animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66 = _c.CreateColorBrush();
                return result;
            }

            CompositionColorBrush AnimatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C()
            {
                if (_animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C != null) { return _animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C; }
                var result = _animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C = _c.CreateColorBrush();
                return result;
            }

            CompositionColorBrush AnimatedColorBrush_White_to_TransparentWhite()
            {
                if (_animatedColorBrush_White_to_TransparentWhite != null) { return _animatedColorBrush_White_to_TransparentWhite; }
                var result = _animatedColorBrush_White_to_TransparentWhite = _c.CreateColorBrush();
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostLightGray_FFCCD1D9()
            {
                return (_colorBrush_AlmostLightGray_FFCCD1D9 == null)
                    ? _colorBrush_AlmostLightGray_FFCCD1D9 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xCC, 0xD1, 0xD9))
                    : _colorBrush_AlmostLightGray_FFCCD1D9;
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionColorBrush ColorBrush_AlmostWhiteSmoke_FFEFEFEF()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xEF, 0xEF, 0xEF));
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionColorBrush ColorBrush_AlmostWhiteSmoke_FFF3F3F3()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF3, 0xF3, 0xF3));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape()
            {
                if (_containerShape != null) { return _containerShape; }
                var result = _containerShape = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: ruoi
                shapes.Add(SpriteShape_5());
                // ShapeGroup: ruoi
                shapes.Add(SpriteShape_6());
                // ShapeGroup: ruoi
                shapes.Add(SpriteShape_7());
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - Layer aggregator
            // ShapeGroup: box
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - Layer aggregator
            // Offset:<-0.75, -0.75>
            CompositionPathGeometry PathGeometry_4()
            {
                if (_pathGeometry_4 != null) { return _pathGeometry_4; }
                var result = _pathGeometry_4 = _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: ruoi
            CompositionPathGeometry PathGeometry_5()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_5()));
            }

            // - - Layer aggregator
            // ShapeGroup: ruoi
            CompositionPathGeometry PathGeometry_6()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_6()));
            }

            // - - Layer aggregator
            // ShapeGroup: ruoi
            CompositionPathGeometry PathGeometry_7()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_7()));
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<60, 83.33>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 60F, 83.3300018F), ColorBrush_AlmostLightGray_FFCCD1D9());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<76.072, 83.33>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 76.0719986F, 83.3300018F), ColorBrush_AlmostWhiteSmoke_FFF3F3F3());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<60, 55.748>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 60F, 55.7480011F), ColorBrush_AlmostWhiteSmoke_FFEFEFEF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<60, 55.75>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 60F, 55.75F), ColorBrush_AlmostLightGray_FFCCD1D9());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                // Offset:<67.12, 36.881>
                var result = CreateSpriteShape(PathGeometry_4(), new Matrix3x2(1F, 0F, 0F, 1F, 67.1200027F, 36.8810005F));;
                result.StrokeBrush = AnimatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                var strokeDashArray = result.StrokeDashArray;
                strokeDashArray.Add(2.02800012F);
                strokeDashArray.Add(2.02800012F);
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                // Offset:<57.957, 10.552>
                var geometry = PathGeometry_5();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 57.9570007F, 10.552F), AnimatedColorBrush_White_to_TransparentWhite());;
                result.StrokeBrush = AnimatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C();
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 0.699999988F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                // Offset:<64.145, 9.606>
                var geometry = PathGeometry_6();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 64.1449966F, 9.60599995F), AnimatedColorBrush_White_to_TransparentWhite());;
                result.StrokeBrush = AnimatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C();
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 0.699999988F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_7()
            {
                // Offset:<62.4, 13.144>
                var geometry = PathGeometry_7();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 62.4000015F, 13.1440001F), AnimatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C());;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0329999998F), new Vector2(0.833000004F, 0.967000008F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_1;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.22.
                result.InsertKeyFrame(0.204379991F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 10.22.
                result.InsertKeyFrame(0.204380006F, 0F, StepThenHoldEasingFunction());
                // Frame 19.44.
                result.InsertKeyFrame(0.388899982F, 1F, CubicBezierEasingFunction_1());
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 19.45.
                var result = CreateScalarKeyFrameAnimation(0.388900012F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 35.
                result.InsertKeyFrame(0.699999928F, 1F, CubicBezierEasingFunction_1());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-0.75, -0.75>
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 35.
                result.InsertKeyFrame(0.699999988F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0329999998F), new Vector2(0.833000004F, 0.953000009F)));
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(120F, 120F);
                var shapes = result.Shapes;
                // ShapeGroup: box
                shapes.Add(SpriteShape_0());
                // ShapeGroup: box
                shapes.Add(SpriteShape_1());
                // ShapeGroup: box
                shapes.Add(SpriteShape_2());
                // ShapeGroup: box
                shapes.Add(SpriteShape_3());
                // Offset:<-0.75, -0.75>
                shapes.Add(SpriteShape_4());
                shapes.Add(ContainerShape());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.17000008F, 50.0709991F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 10.22.
                result.InsertExpressionKeyFrame(0.204379991F, "Pow(1-_.t0,3)*Vector2(-3.17,50.071)+(3*Square(1-_.t0)*_.t0*Vector2(-7.845003,45.94299))+(3*(1-_.t0)*Square(_.t0)*Vector2(-16.742,36.124))+(Pow(_.t0,3)*Vector2(-2.832,30.851))", StepThenHoldEasingFunction());
                // Frame 19.44.
                result.InsertExpressionKeyFrame(0.388899982F, "Pow(1-_.t0,3)*Vector2(-2.832,30.851)+(3*Square(1-_.t0)*_.t0*Vector2(9.983994,25.993))+(3*(1-_.t0)*Square(_.t0)*Vector2(14.00802,26.771))+(Pow(_.t0,3)*Vector2(18.553,23.037))", StepThenHoldEasingFunction());
                // Frame 35.
                result.InsertExpressionKeyFrame(0.699999928F, "Pow(1-_.t1,3)*Vector2(18.553,23.037)+(3*Square(1-_.t1)*_.t1*Vector2(25.16901,17.599))+(3*(1-_.t1)*Square(_.t1)*Vector2(19.18901,-0.6169993))+(Pow(_.t1,3)*Vector2(-0.84,-1.824))", StepThenHoldEasingFunction());
                // Frame 35.
                result.InsertKeyFrame(0.699999988F, new Vector2(-0.839999974F, -1.824F), StepThenHoldEasingFunction());
                return result;
            }

            internal Empty_Box_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(120F, 120F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66.StartAnimation("Color", ColorAnimation_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66(), AnimationController_0());
                _animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C.StartAnimation("Color", ColorAnimation_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C(), AnimationController_0());
                _animatedColorBrush_White_to_TransparentWhite.StartAnimation("Color", ColorAnimation_White_to_TransparentWhite(), AnimationController_0());
                _containerShape.StartAnimation("Offset", OffsetVector2Animation(), AnimationController_0());
                _pathGeometry_4.StartAnimation("TrimEnd", TrimEndScalarAnimation_0_to_1(), AnimationController_0());
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
                _root.Properties.StartAnimation("t1", t1ScalarAnimation_0_to_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _animatedColorBrush_AlmostDimGray_FF595E66_to_TransparentAlmostDimGray_00595E66.StopAnimation("Color");
                _animatedColorBrush_AlmostDimGray_FF6C6C6C_to_TransparentAlmostDimGray_006C6C6C.StopAnimation("Color");
                _animatedColorBrush_White_to_TransparentWhite.StopAnimation("Color");
                _containerShape.StopAnimation("Offset");
                _pathGeometry_4.StopAnimation("TrimEnd");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
            }

        }
    }
}
