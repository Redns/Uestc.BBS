<Window
    x:Class="Uestc.BBS.Desktop.Views.AuthWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
    xmlns:controls="using:Uestc.BBS.Desktop.Controls"
    xmlns:core="using:Uestc.BBS.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:icon="using:FluentIcons.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:view="using:Uestc.BBS.Desktop.Views"
    xmlns:vm="using:Uestc.BBS.Desktop.ViewModels"
    Title="清水河畔"
    Width="360"
    Height="320"
    x:DataType="vm:AuthViewModel"
    CanResize="False"
    ExtendClientAreaChromeHints="NoChrome"
    ExtendClientAreaTitleBarHeightHint="30"
    ExtendClientAreaToDecorationsHint="True"
    Icon="/Assets/Icons/taskbar.ico"
    SystemDecorations="{OnPlatform Default=Full,
                                   Linux=None}"
    TransparencyLevelHint="AcrylicBlur"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d">
    <Window.Styles>
        <Style Selector="ui|ProgressRing:preserveaspect">
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="MinWidth" Value="20" />
        </Style>
    </Window.Styles>
    <Panel>
        <ExperimentalAcrylicBorder IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
                <ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    FallbackColor="{DynamicResource BgWindow}"
                    MaterialOpacity="{Binding AppSettingModel.MaterialOpacity, Mode=OneWay}"
                    TintColor="{Binding AppSettingModel.TintColor, Mode=OneWay}"
                    TintOpacity="{Binding AppSettingModel.TintOpacity, Mode=OneWay}" />
            </ExperimentalAcrylicBorder.Material>
        </ExperimentalAcrylicBorder>
        <Grid RowDefinitions="auto,*">
            <DockPanel Background="{OnPlatform Linux=Transparent}" PointerPressed="{OnPlatform Linux=DragWindow}">
                <Button
                    Classes="WindowToolbarButton CloseButton"
                    Click="CloseWindow"
                    DockPanel.Dock="Right">
                    <icon:SymbolIcon Symbol="Dismiss" />
                </Button>
                <Border />
            </DockPanel>
            <StackPanel
                Grid.Row="1"
                Margin="25,0"
                Orientation="Vertical">
                <Image
                    Height="50"
                    Cursor="Hand"
                    Source="/Assets/Icons/auth_icon.png">
                    <Interaction.Behaviors>
                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.PointerPressedEvent}">
                            <InvokeCommandAction Command="{Binding OpenOfficialWebsiteCommand}" />
                        </RoutedEventTriggerBehavior>
                    </Interaction.Behaviors>
                </Image>
                <AutoCompleteBox
                    Margin="0,18,0,0"
                    Classes="Auth"
                    ItemsSource="{Binding Users, Mode=OneTime}"
                    SelectedItem="{Binding SelectedCredential}"
                    Text="{Binding Username}"
                    Watermark="用户名">
                    <AutoCompleteBox.ItemTemplate>
                        <DataTemplate DataType="core:AuthCredential">
                            <DockPanel Margin="0,3" LastChildFill="False">
                                <controls:Avatar
                                    Width="35"
                                    DockPanel.Dock="Left"
                                    Source="{Binding Avatar, Mode=OneTime}" />
                                <StackPanel
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name, Mode=OneTime}" />
                                    <TextBlock
                                        FontSize="12"
                                        Foreground="Gray"
                                        Text="{Binding Uid, Mode=OneTime}" />
                                </StackPanel>
                                <Button
                                    Width="32"
                                    Classes="theme-subtle"
                                    Command="{Binding $parent[AutoCompleteBox].((vm:AuthViewModel)DataContext).DeleteCredentialCommand}"
                                    CommandParameter="{Binding}"
                                    Cursor="Hand"
                                    DockPanel.Dock="Right">
                                    <icon:SymbolIcon
                                        DockPanel.Dock="Right"
                                        FontSize="16"
                                        Symbol="Delete" />
                                </Button>
                            </DockPanel>
                        </DataTemplate>
                    </AutoCompleteBox.ItemTemplate>
                    <AutoCompleteBox.InnerRightContent>
                        <controls:Avatar
                            Width="32"
                            Margin="2,0"
                            DockPanel.Dock="Right"
                            Source="{Binding Avatar, Mode=OneWay}" />
                    </AutoCompleteBox.InnerRightContent>
                    <Interaction.Behaviors>
                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static AutoCompleteBox.SelectionChangedEvent}">
                            <InvokeCommandAction Command="{Binding SelectCredentialCommand}" PassEventArgsToCommand="True" />
                        </RoutedEventTriggerBehavior>
                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.KeyDownEvent}">
                            <InvokeCommandAction Command="{Binding EnterToLoginCommand}" PassEventArgsToCommand="True" />
                        </RoutedEventTriggerBehavior>
                    </Interaction.Behaviors>
                </AutoCompleteBox>
                <TextBlock
                    Height="20"
                    FontSize="12"
                    Foreground="#3B81F5"
                    Text="{Binding UsernameMessage, Mode=OneWay}" />
                <TextBox
                    Classes="Auth has-reveal-password-button"
                    PasswordChar="{actipro:ThemeResource EditPasswordChar}"
                    Text="{Binding Password}"
                    Watermark="密码">
                    <TextBox.Styles>
                        <Style Selector="TextBlock#PART_Watermark">
                            <Setter Property="FontSize" Value="300" />
                        </Style>
                    </TextBox.Styles>
                    <Interaction.Behaviors>
                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.KeyDownEvent}">
                            <InvokeCommandAction Command="{Binding EnterToLoginCommand}" PassEventArgsToCommand="True" />
                        </RoutedEventTriggerBehavior>
                    </Interaction.Behaviors>
                </TextBox>
                <TextBlock
                    Height="20"
                    FontSize="12"
                    Foreground="#3B81F5"
                    Text="{Binding PasswordMessage, Mode=OneWay}" />
                <StackPanel Orientation="Horizontal" Spacing="20">
                    <CheckBox
                        Classes="Auth"
                        Content="记住密码"
                        IsChecked="{Binding RememberPassword}" />
                    <CheckBox
                        Classes="Auth"
                        Content="自动登录"
                        IsChecked="{Binding AutoLogin}" />
                </StackPanel>
                <Button
                    Height="36"
                    Margin="0,18,0,0"
                    Classes="theme-solid accent"
                    Command="{Binding LoginCommand}">
                    <StackPanel Orientation="Horizontal">
                        <ui:ProgressRing
                            BorderThickness="3"
                            EndAngle="200"
                            Foreground="{Binding #LoginButtonText.Foreground, Mode=OneWay}"
                            IsIndeterminate="True"
                            IsVisible="{Binding LoginCommand.IsRunning, Mode=OneWay}"
                            StartAngle="50" />
                        <TextBlock
                            Name="LoginButtonText"
                            VerticalAlignment="Center"
                            IsVisible="{Binding !LoginCommand.IsRunning, Mode=OneWay}"
                            Text="登 录" />
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Panel>
</Window>
